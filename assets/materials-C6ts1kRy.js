import{E as s,k as o,A as a,e as l}from"./index-D5FKNvWv.js";import{f as d}from"./format-CMfQEa-o.js";const t={getLabs(r){return s.assignment.filter(e=>e.group_id===r)},getTheory(r){return s.theory_material.filter(e=>e.group_id===r)},async GetLabsByGroupAndDisciplineId(r,e){return new Promise(i=>{setTimeout(()=>{i(s.assignment.filter(n=>n.discipline_id==e))},500)})},async GetTheoryByGroupAndDisciplineId(r,e){return new Promise(i=>{setTimeout(()=>{i(s.theory_material.filter(n=>n.discipline_id==e))},500)})},GetTheoryIdForLabById(r){return s.assignment_theory_material.filter(e=>e.assignment_id===r).map(e=>e.theory_material_id)},async GetDeadlinesByGroupId(r,e){return new Promise(i=>{setTimeout(()=>{i(s.deadlines)},500)})}},c={async getDisciplinesByUser(r){return new Promise(e=>{setTimeout(()=>{const i=s.disciplines;e(i)},500)})}},u=o("AllDisciplines",{state:()=>({allDisciplines:[],selectedDiscipline:null}),getters:{userId:()=>{var e;return((e=l().user)==null?void 0:e.id)??null},allGroups:()=>a().allGroups,getDisciplineById(){return r=>{var e;return(e=this.allDisciplines)==null?void 0:e.find(i=>i.id==r)}},getSelectedDisciplineId(){return()=>this.selectedDiscipline?this.selectedDiscipline.id:null}},actions:{async setDisciplinesByUser(){try{console.log(`вызов дисциплин для юзера- ${this.userId}`),this.allDisciplines=await c.getDisciplinesByUser(this.userId);return}catch(r){console.error("ошибка в запросе к дисциплинам",r)}},async createDiscipline(){try{console.log(`сохранение дисциплины- ${this.userId}`);return}catch(r){console.error("ошибка в сохранении дисциплины",r)}}},persist:!0}),h=o("AllMaterials",{state:()=>({Labs:[],TheoryMaterial:[],Deadlines:[],navigateLabId:null}),getters:{group_id:()=>{var e;return((e=l().user.group)==null?void 0:e.id)??null},selectedDisciplineId:()=>{var e;return((e=u().selectedDiscipline)==null?void 0:e.id)??null},getTheoryForLabById(){return r=>{const e=t.GetTheoryIdForLabById(r);return this.TheoryMaterial.filter(i=>e.includes(i.id))}},deadlineOnThisDate(){return r=>this.Deadlines.some(e=>e.date.includes(d(r,"yyyy-MM-dd")))},getDedlinesForDate(){return r=>this.Deadlines.filter(e=>e.date.includes(r))}},actions:{async setDeadlines(r){try{this.Deadlines=await t.GetDeadlinesByGroupId(this.group_id,r)}catch(e){console.error("ошибка в запросе к дедлайнам",e)}},async setLabs(){try{console.log("вызов лаб"),this.Labs=await t.GetLabsByGroupAndDisciplineId(this.group_id,this.selectedDisciplineId);return}catch(r){console.error("ошибка в запросе к лабам",r)}},async setTheory(){try{this.TheoryMaterial=await t.GetTheoryByGroupAndDisciplineId(this.group_id,this.selectedDisciplineId);return}catch(r){console.error("ошибка в запросе к теориям",r)}}}});export{u as a,h as u};
